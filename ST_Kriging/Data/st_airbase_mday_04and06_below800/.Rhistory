q()
centroids = coordinates(ceShape.shp)
centroids = sp.coordinates(ceShape.shp)
install.packages("maptools")
library(maptools)
centroids = coordinates(ceShape.shp)
library(gstat)
library(maptools)
library(rgdal)
load("AirBasePM10_070409.RData")
dnorm(0,1)
getwd()
temp = list.files('M12//Project//st_airbase_mday_04and06_below800', pattern="*.Rda")
temp
list.files()
list.files(pattern='*.Rda')
temp = list.files('M12//Project//st_airbase_mday_04and06_below800', pattern="*.RData")
temp
load(temp[1])
setwd('M12//Project//st_airbase_mday_04and06_below800')
temp = list.files(pattern="*.RData")
load(temp[1])
View(st.airbase.mday)
load(temp[2])
x=data.frame('v','k')
x
x[1,] = c(4,5)
x[1] = c(4,5)
x['v']=1
x
x=data.frame('v','k')
names(x) = c(1,2)
x
x
x=data.frame('v','k')
k=rbind(x,v=c(1,2),k=c(2,4))
k=rbind(x,v=1,k=2)
setwd('M12//Project//st_airbase_mday_04and06_below800')
wfiles = list.files(pattern="*.RData")
data = array(list(), c(length(wfiles), 1))
wfiles
data
wfiles[1]
x='sayantan_monti_itc'
strsplit(x,'_')
strsplit(wfiles[1],'_')
strsplit(wfiles[1],'_')[-1]
k=strsplit(wfiles[1],'_')
k
substr(wfiles[1], length('st_airbase_mday')))
substr(wfiles[1], length('st_airbase_mday'))
substr(wfiles[1], length('st_airbase_mday'), find(wfiles[1], '.'))
find(wfiles[1],'.')
substr(wfiles[1], length('st_airbase_mday')+1,length('st_airbase_mday')+6)
wfiles[1]
substr(wfiles[1], length('"st_airbase_mday"')+1,length('"st_airbase_mday"')+6)
substr(wfiles[1], length('st_airbase_mday')+1,length('st_airbase_mday')+6)
substring(wfiles[1], length('st_airbase_mday')+1,length('st_airbase_mday')+6)
length('st_airbase_mday')+1
length(as.character('st_airbase_mday'))+1
nchar('st_airbase_mday')+1
substr(wfiles[1], nchar('"st_airbase_mday"')+1,nchar('"st_airbase_mday"')+6)
substr(wfiles[1], nchar('"st_airbase_mday"')+1,nchar('"st_airbase_mday"')+5)
wfiles = list.files(pattern="*.RData")
numfiles = length(wfiles)
start_index = nchar("st_airbase_mday") + 1
data = array(list(), c(numfiles, 2))
for (index in 1:numfiles) {
load(wfiles[i])
date = substr(wfiles[i], start_index, start_index + 5)
data[i, ] = list(date, st.airbase.mday)
}
wfiles = list.files(pattern="*.RData")
numfiles = length(wfiles)
start_index = nchar("st_airbase_mday") + 1
data = array(list(), c(numfiles, 2))
for (i in 1:numfiles) {
load(wfiles[i])
date = substr(wfiles[i], start_index, start_index + 5)
data[i, ] = list(date, st.airbase.mday)
}
data
start_index =
start_index
substr(wfiles[1], nchar('"st_airbase_mday"')+1,nchar('"st_airbase_mday"')+5)
substr(wfiles[2], nchar('"st_airbase_mday"')+1,nchar('"st_airbase_mday"')+5)
wfiles = list.files(pattern="*.RData")
numfiles = length(wfiles)
start_index = nchar('"st_airbase_mday"') + 1
data = array(list(), c(numfiles, 2))
for (i in 1:numfiles) {
load(wfiles[i])
date = substr(wfiles[i], start_index, start_index + 5)
data[i, ] = list(date, st.airbase.mday)
}
data
data[[28,2]]
view(data[[28,2]])
View(st.airbase.mday)
View(data[[28,2]])
View(data[[27,2]])
View(data[[28,2]])
View(data[[26,2]])
View(data)
grep(wfiles[1],".")
grepl(wfiles[1],".")
wfiles
wfiles[1]
grepl(wfiles[1],"_")
grep(".", wfiles[1])
grepl(".", wfiles[1])
gregexpr(".", wfiles[1])
wfiles[1][1]
x=as.character(wfiles[1])
x
x[2]
install.packages('stringi')
stringi(".", wfiles[1])
library(stringi)
stringi(".", wfiles[1])
stri_locate(".", wfiles[1])
stri_locate(wfiles[1], ".")
stri_locate(wfiles[1], ".", fixed=TRUE)
stri_locate_all(".", wfiles[1], fixed=TRUE)
unlist(gregexpr(pattern ='2',"the2quickbrownfoxeswere2tired"))
unlist(gregexpr(pattern ='.', wfiles[1]))
wfiles[1]
unlist(gregexpr(pattern ='.', as.character(wfiles[1]))
)
unlist(gregexpr(pattern ='.', 'st_airbase_mday_010410.RData'))
unlist(gregexpr(pattern ='RData', 'st_airbase_mday_010410.RData'))
unlist(gregexpr(pattern ='.RData', 'st_airbase_mday_010410.RData'))
unlist(gregexpr(pattern ='.RData', wfiles[1]))
substr(wfiles[1], start_index, unlist(gregexpr(pattern ='.RData', wfiles[1])))
wfiles = list.files(pattern="*.RData")
numfiles = length(wfiles)
start_index = nchar('"st_airbase_mday"') + 1
data = array(list(), c(numfiles, 2))
for (i in 1:numfiles) {
load(wfiles[i])
date = substr(wfiles[i], start_index, unlist(gregexpr(pattern ='.RData', wfiles[1])) -1)
data[i, ] = list(date, st.airbase.mday)
}
data
wfiles
wfiles = list.files(pattern="*.RData")
numfiles = length(wfiles)
start_index = nchar('"st_airbase_mday_"') + 1
data = array(list(), c(numfiles, 2))
for (i in 1:numfiles) {
load(wfiles[i])
date = substr(wfiles[i], start_index, unlist(gregexpr(pattern ='.RData', wfiles[1])) -1)
data[i, ] = list(date, st.airbase.mday)
}
data
wfiles = list.files(pattern="*.RData")
numfiles = length(wfiles)
start_index = nchar('"st_airbase_mday_"') + 1
data = array(list(), c(numfiles, 2))
for (i in 1:numfiles) {
load(wfiles[i])
date = substr(wfiles[i], start_index, unlist(gregexpr(pattern ='.RData', wfiles[i])) -1)
data[i, ] = list(date, st.airbase.mday)
}
data
wfiles = list.files(pattern="*.RData")
numfiles = length(wfiles)
start_index = nchar('"st_airbase_mday_"')
data = array(list(), c(numfiles, 2))
for (i in 1:numfiles) {
load(wfiles[i])
date = substr(wfiles[i], start_index, unlist(gregexpr(pattern ='.RData', wfiles[i])) -1)
data[i, ] = list(date, st.airbase.mday)
}
data
wfiles = list.files(pattern="*.RData")
numfiles = length(wfiles)
start_index = nchar('"st_airbase_mday"')
data = array(list(), c(numfiles, 2))
for (i in 1:numfiles) {
load(wfiles[i])
date = substr(wfiles[i], start_index, unlist(gregexpr(pattern ='.RData', wfiles[i])) -1)
data[i, ] = list(date, st.airbase.mday)
}
data
data[1,2]
plot(data[[1,2]]$pm10.obs)
X11()
plot(data[[2,2]]$pm10.obs)
plot(data[[3,2]]$pm10.obs)
data[[3,2]]$lat == data[[1,2]]$lat
length(data[3,2]$lat)
length(data[[3,2]]$lat)
length(data[[1,2]]$lat)
length(data[[3,2]])
length(data[[3,2]]$mNo)
max_obs = length(data[[1,2]]$mNo)
max_index = 1
for(i in 2:numfiles) {
if(max_obs < length(data[[i, 2]]$mNo)) {
max_index = i
}
}
max_index
length(data[[28,2]]$mNo)
max_lat = max(data[[max_index, 2]]$lat)
min_lat = min(data[[max_index, 2]]$lat)
max_lon = max(data[[max_index, 2]]$lon)
min_lon = min(data[[max_index, 2]]$lon)
max_lat
min_lat
max_lon
